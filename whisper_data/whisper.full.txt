Thank you all for joining or for watching if you're watching this on the recording, which hopefully more of you are.
I am Josh Berkus.
I am hosting today's meeting.
Taliesin is our note taker.
Laura is our usher here.
You too can be a volunteer for the glamorous community meeting that we have every month.
It's actually kind of fun.
Plus, you get to know a lot of people in the community who you maybe didn't know before.
If you're interested in this, please contact us on ENC contributor experience either through the mailing list or through the Slack.
We will be happy to set you up helping out with one of the future community meetings.
The usual housekeeping.
First of all, this is an official meeting of the Kubernetes project.
As such, we are subject to the Kubernetes code of conduct.
So please be respectful towards each other.
Or housekeeping.
You want to tell them about the read only version? Oh, right.
Yes.
So we posted a link there in the chat for a read only version of the notes.
If you are not taking notes or adding things to one of the agenda items, please close your tab of the editable version and open your tab of the read only version simply because Google Docs tends to slow down when too many people have a document.
And Allison needs to take notes.
So that's there.
We have a number of topics for this meeting.
All those topics were gathered from the community over the last several weeks as things that we felt were of general community interest.
However, for any and all of you as contributors to Kubernetes, you are entitled and in fact encouraged to put things on the agenda for the community meeting when there are things that the community should probably pay attention to.
And again, please either just drop something on the agenda document, which is open year round, or contact SIG contributed experience or use our forum.
Or if you could drop a link to that forum in there.
To say that you have an item and give us information about what it is.
Because that's what this meeting is for.
So with that, we're going to go ahead and get started with the meeting.
We've got some announcements.
One of them I'm going to be real quick on.
So the release cadence survey is open.
That link is in the notes and will soon be posted to chat.
And we will be talking more about that later in this meeting.
There is, by the way, a second survey.
This is not a Kubernetes community survey.
This is a survey being done by a student at Florida University.
Spirthy, if you want to turn your camera on and wave at everybody.
Hey there.
So Spirthy, who is a student at Florida University doing her graduate study in CS, wants to find out how we interact with bots such as the prow bot and has put together a survey with the help of some of the people in the community.
So take a look at that link in the notes and fill it out if you have time.
Thank you.
And then finally, we are planning to have a contributor summit at KubeCon Europe.
So Pouya, are you here? Yeah, yes, I am.
I'll make it short.
There will be a KubeCon contributor summit in Europe, in Valencia.
It's going to be on the Monday the 16th.
So three of the COLO events.
We are currently aiming at kicking off the organization on Monday.
There is roughly a plan to make it unconference style, single track plus hallway track.
And volunteers are still welcome.
If you want to volunteer, just join the meeting on Monday.
The thing is in the notes document that I'm going to post in the chat in a bit and or just join the summit staff channel, but only join the summit staff channel.
If you want to volunteer, you just want to join the contributor summit.
There's also a contributor summit channel where you're going to post registration information and other kind of things.
Okay.
Thank you.
And with announcements, it's time to move into release updates.
And to give us release updates, we should have one of our release leads.
Yeah, Sissy here.
Yep.
Hey, Sissy, go ahead.
Hi.
Yeah.
Hi, everyone.
This is Sissy from the release team.
I'm going to be the release lead shadow for this cycle and I'm going to give updates for the release team.
And currently we are at week 10 and the release is currently scheduled for April, which is in wait 15th.
And I will just give some major milestones for everyone to be aware of.
First, we are going to start to take exceptions starting March 21st.
And we are going to have like one more meeting added starting next week, also 21st of March.
And we will have daily breakout meetings starting March 28th.
And also we will have our first release retrospective meeting scheduled also next week.
And currently we have 16.
6 enhancement tracked and we are like roughly two weeks to code freeze, which is Wednesday 30th of March.
So for all the tracking enhancement, please be aware you have to get all the PR merged before the code freeze to be able to consider that it's completed.
And for all the enhancement which needs docs, please be aware you have to open the placeholder PRs before 31st of March.
And the doc deadline for PR ready to review is 5th of April.
And our docs team will make sure that all the docs emerge one week before the monthly release.
And we are starting to collect the major SIEMs candidate.
And if you have any suggestions, please don't hesitate to reach out, also any potential release block context.
And we are reached in the SIG release channel.
So please reach out there if you have any questions or concerns.
For the CI signal update, we currently still have one filling test.
We will be syncing with the CI signal guys to make sure it gets addressed before the release.
And for the patch release, backward relating for the alpha 4 release card and all the previous release card, which is mostly, yeah, that's basically updates from us.
Thank you.
Thank you.
Laura Lawrence, do you want any comments about the current state of CI signal? Yeah, hi, everybody.
CI signal for this release here named Laura.
Yeah, basically, exactly as Cece said, the important deadline is for the next release cut, which is next Tuesday.
So we're keeping an eye on that.
Both of these are a bit of a long standing open failure and flakes.
So they have a bit of a history too, but we'll be coming around and making sure that that's resolved before Tuesday.
And yeah, that's it.
Okay, well, thank you.
And I actually forgot to solicit anybody from the patch team on release engineering.
Do we have anybody online here? Okay, I won't say anything other than should have gotten the patch releases yesterday.
The dev list for that.
Okay, well, thank you.
And that said, let's go into our first kept item here, which is the release cadence.
It's kept from a year ago.
And we've kind of really reached the next stage of that.
So Jeremy, if you would like to go ahead and take that away.
Sure.
Nice to see everybody.
I haven't been on a community meeting in a little bit, and it's fun to see all your faces.
So for those that are not aware, in 2020 with the 119 release, we ended up because of events in the world, just the general state of things, the schedule for the 119 release got pretty pretty elongated.
And the kind of takeaway or the fallout that is that we ended up with only three releases for that year.
And that kind of served as a talking point or a way to place a kickoff discussion about what was the proper release cadence for Kubernetes.
There's a lot of factors that go into like, you know, determining what the optimal thing is.
But if you take a look at the support windows and the number of releases that happen per year and how hard it is for some people to upgrade, we started the discussion about maybe we should move to a permanent three release cadence or try it for a while and see what it looks like.
Sort of a natural experiment.
And as part of that, we created a KEP.
And the KEP is linked here, you're welcome to go read it.
But at a really high level, what the KEP proposed was fixing the number of releases per year to three.
And from that kind of backing into a loose framework for generating schedules.
So on average, releases are 15 weeks.
On average, it will be around two weeks between them to allow people to do some norming and forming for the next release teams and things that go into that.
One of the things that we decided to do as part of the KEP was to send a survey after we had done this for a little while to collect feedback from folks.
And today we're going to talk a little bit about some of that feedback.
Thanks to Josh for taking some of the data that came out of the surveys and making some pretty graphs for us.
But the survey is still open.
And again, I think we linked it in the chat earlier.
But it's also linked in this document in the section as well.
If you have not filled it out yet, please do so.
Your feedback is very, very valuable and will help us determine whether this is the pattern we continue or whether we need to make any further tweaks to the release cadence or the schedules themselves.
I think a really interesting thing that came out of this was that the answers kind of break down in a pretty clear pattern.
People strongly prefer the three release cadence so far.
There's a smaller number of people that prefer but not strongly prefer the three release cadence.
And then a smaller number that has no preference.
The four release cadence preference seems to be pretty low amongst the respondents so far.
So again, this is still in progress.
We're still collecting results.
Another interesting thing is that there are a ton of people that are still running very old versions of Kubernetes.
Whether that's through choice, they don't want to upgrade, or they just can't because of the difficulty that come with doing major upgrades like that.
If you look at the data in the third chart, we see a lot of people are running 1.
21, but there's also a lot of people running 1.
20, which is now in maintenance mode.
And there's a surprising number that are still running 1.
19, 1.
18, or the bucket of 1.
17 or older.
So we didn't really go into any more granularity there.
But that's a lot of folks that are running clusters that are no longer getting patches, no longer getting updates.
And again, whether that's because it's difficult to kind of keep up with the upgrade cadence, we don't have the direct drill down here for that or not.
But looking at the data, it's pretty clear so far that the three cadence release thing is working okay for folks.
From the release team's perspective, we think it's been beneficial.
The change in general has been beneficial.
It's been a little bit easier to staff the release teams.
We did have some difficulty coming into the 2021 year after – it's hard to really determine what the cause was.
But we had some difficulty getting role leads for some of those teams.
It's difficult to make that kind of time commitment.
The predictability of it makes it a little easier to know, like, I'm going to be able to commit to this time because I know that it's going to be pretty much these dates.
Inside the cap, we have some high-level guidance about what it's going to look like for the rest of 2022.
Those dates are notional, so they may shift a little bit depending on things that happen, but you get a little bit better understanding of what things are going to look like.
Obviously, the downside is that with fewer releases, the cadence or the velocity of getting new features out falls a little bit.
So that's an area where we end up needing to do some balancing between the needs of distributors and the needs of users.
With that, I'll open it up for any questions.
Again, I think the major takeaway here is if you have not done the survey, please, please do so.
We would very much like to have the feedback, and it'll help us make decisions for the community going forward.
So if you have any comment on release cadence, go ahead and raise your hand.
There's a question in the chat.
It's not really related to this, but I'll answer it since we're here and we're kind of paused.
Any idea when Shadows will be hired for upcoming releases? Because of the predictable schedule, generally what happens for every release is at the end of the cycle, we send out a survey, a Google form, basically to collect applicants.
That'll generally be in the last two, three, maybe four weeks of the release.
You can kind of back that up from the release date.
So if you look at the release date for 1-23, as C.
C.
mentioned, or sorry, 1-24 as C.
C.
mentioned, that is supposed to be April 19th.
So probably end of March, which is coming up, beginning of April, you'll start to see some of the comms come out from that.
So definitely stay tuned to Kubernetes dev if you're not there already.
Thanks, Dems, for dropping the link to the release timeline into the chat as well.
I think Eddie also asked, with the change in the cadence, have we seen an uptick in cherry picks or backports? I don't think we've seen a major shift in that pattern.
I think Adolfo is on as well.
Do you have any other opinions there? I mean, not much, to be honest.
At least regarding the time spent with approving cherry picks and reviews, it's not much.
Yeah, and the other thing, someone did a report on 1.
23 for the number of exception requests, and it did not go up markedly with the change in release cadence.
It did not? Yeah.
Part of it was we were trying to decide, it was in a thread about deciding how long code freeze should be.
One of the release teams hopefully posted a bunch of stats for the last four months.
Yeah, I mean, there was a small increase, as you'd expect, but there wasn't a doubling or anything like that.
I think on that kind of line of thinking, the number of enhancements that has landed in those places has generally, I think with the smaller cadence, has been a little higher.
Like this time around, we have 66 things that are being tracked, and that runs the gamut of brand new alpha things, things that are graduating beta, things that are graduating to stable, things that are duplicating as well.
That number is higher than I think we saw in the times prior to say like 1.
19, but it's been fairly consistent across those services.
Since we, 1.
19 was a little different as well because while it was elongated, we didn't keep the enhancements collection period open for longer.
It was kind of coming off of the previous normal cycles before.
We were wondering whether the 1.
20 release coming right after that was going to be like a big bang thing where folks had a lot of queued up things that they wanted to ship, and whether that would be unusual.
It turns out it was bigger, but it didn't seem like out of line with the ones that came after 1.
20.
Okay, Jordan wants to know whether we track backwards for release branch over time.
Does anybody know the answer to that? I don't think we keep that as a running set of data, but I bet we could build that set of data if that's of interest to folks.
Are we out of time? I think that would be interesting.
I have a feeling that it's going up, but for reasons unrelated to the release gate set for reasons having to do with the release of 1.
20.

